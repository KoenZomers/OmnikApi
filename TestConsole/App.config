<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="KoenZomers.Omnik.Configuration" type="KoenZomers.Omnik.Api.Configuration.OmnikConfigurationSection, KoenZomers.Omnik.Api, Culture=neutral, PublicKeyToken=470a27727e611ef4"/>
  </configSections>
  <KoenZomers.Omnik.Configuration>
    <Listeners>
      <!-- It is possible to add one or more listeners here. Usually you only need one listener as the Omnik provides its serial number in the statistical data -->
      <!-- which you can use to distinguish between multiple Omniks sending data. Alternatively you could also open up a separate listener each on its own port -->
      <!-- for each Omnik. It's up to you. -->
      <!-- The ports are TCP ports. Make sure there are no firewalls blocking the data from the Omnik to be sent to this TCP port. -->
      <!--<add name="Omnik Listener" port="8844"/>-->
      <!--<add name="Omnik Listener 2" port="8845" />-->
    </Listeners>
    <!-- This sets the level of logging through the trace listeners throughout the code. Use one of the following values: -->
    <!-- None, Info, Warning, Verbose -->
    <!-- Note that you need to add at least one Trace Listener in the configuration below for this to have effect -->
    <Logging Level="Verbose"/>
  </KoenZomers.Omnik.Configuration>
  <appSettings>
    <!-- IP address \ DNS name on which the Omnik Solar inverter can be reached -->
    <add key="OmnikSolarAddress" value="solargarden.devices.zomers.local"/>
    
    <!-- The port number on which the Omnik Solar WiFi module is listening -->
    <add key="OmnikSolarPort" value="8899"/>
  
    <!-- Serial number of the Omnik WiFi module -->
    <add key="OmnikSolarWiFiSerialNumber" value="604963453"/>
  </appSettings>
  <system.diagnostics>
    <!-- You can add one or more trace listeners here using standard .NET configuration -->
    <!-- This defines where the output from the trace listeners will go to -->
    <trace autoflush="true" indentsize="4">
      <listeners>
        <!-- The below trace listener, when uncommented, will output all tracing according to the logging level set above into the console window -->
        <!--<add name="configConsoleListener" type="System.Diagnostics.ConsoleTraceListener" />-->
        <!-- The below trace listener, when uncommented, will output all tracing according to the logging level set above into the file specified in initalizeData. -->
        <!--<add name="myListener" type="System.Diagnostics.TextWriterTraceListener" initializeData="TextWriterOutput.log" /> -->
      </listeners>
    </trace>
  </system.diagnostics>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.2"/>
  </startup>
</configuration>
